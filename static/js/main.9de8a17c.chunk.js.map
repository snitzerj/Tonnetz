{"version":3,"sources":["tonnetz.js","App.js","reportWebVitals.js","index.js"],"names":["Qualities","noteNames","Chord","degree","quality","isMajor","isMinor","oppositeQuality","Minor","Major","p","value","l","r","map","v","replace","notePitchOctave","this","n","name","chords","i","major","minor","synth","Tone","toDestination","Triangle","w","h","columnOffset","direction","color","onMouseDown","onMouseUp","className","points","top","bottom","join","fill","onMouseLeave","Circle","cx","cy","stroke","strokeWidth","MinorChord","scale","rowIndex","chord","Fsm","io","useState","playing","setPlaying","console","log","now","forEach","element","triggerAttack","triggerRelease","MajorChord","MinorChordCircles","notes","note","slice","MajorChordCircles","Fs","MinorChordText","x","y","textAnchor","MajorChordText","TriangleRow","majorParts","minorParts","j","push","viewBox","width","height","Tonnetz","rows","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9de8a17c.chunk.js","sourcesContent":["const Qualities = {\n    \"Major\": [0, 4, 7],\n    \"Minor\": [0, 3, 7]\n}\n\n\nconst noteNames = [\"C\", \"Cs\", \"D\", \"Ds\", \"E\", \"F\", \"Fs\", \"G\", \"Gs\", \"A\", \"As\", \"B\"]\nclass Chord {\n    constructor(degree, quality) {\n        this.quality = quality\n        this.value = this.quality.map(n => (n + degree) % 12)\n        this.name = `${noteNames[this.value[0]]}${this.quality[1] === 3 ? \"m\" : \"\"}`\n    }\n\n    isMajor = () => this.quality[1] === 4\n\n    isMinor = () => this.quality[1] === 3\n\n    oppositeQuality = () => this.isMajor() ? Qualities.Minor : Qualities.Major\n\n    p = () => new Chord(this.value[0], this.oppositeQuality())\n\n    l = () => {\n        if (this.isMajor()) {\n            return new Chord(this.value[0] + 4, this.oppositeQuality())\n        } else {\n            return new Chord(this.value[0] + 8, this.oppositeQuality())\n        }\n    }\n\n    r = () => {\n        if (this.isMajor()) {\n            return new Chord(this.value[0] + 9, this.oppositeQuality())\n        } else {\n            return new Chord(this.value[0] + 3, this.oppositeQuality())\n        }\n    }\n\n    noteNames = () => {\n        return this.value.map(v => noteNames[v].replace(\"s\", \"#\"))\n    }\n\n    notePitchOctave = () => {\n        return this.noteNames().map(v => `${v}4`)\n    }\n\n\n}\n\nexport const chords = () => {\n    let chords = {}\n\n    for (let i = 0; i < 12; i++) {\n        let major = new Chord(i, Qualities.Major)\n        let minor = new Chord(i, Qualities.Minor)\n\n        chords[major.name] = major\n        chords[minor.name] = minor\n    }\n\n    return chords\n}\n\nexport const tonnetzMap = () => {\n    let tonnetzBuilder = {}\n    for (let chordName in chords) {\n        let chord = chords[chordName]\n        tonnetzBuilder[chord.name] = { p: chord.p(), l: chord.l(), r: chord.r() }\n    }\n\n    return tonnetzBuilder\n}\n\n\n\n\n","import './App.css';\nimport React, { Component, useState } from 'react';\nimport { chords, tonnetzMap } from './tonnetz'\nimport * as Tone from 'tone'\n\nconst synth = new Tone.PolySynth(Tone.Synth).toDestination();\n\nconst Triangle = ({ w = '200', h = '150', columnOffset = 0, direction = 'top', color = '#44a6e8', onMouseDown = null, onMouseUp = null, className=\"Triangle\" }) => {\n  const points = {\n    top: [`${columnOffset + (w / 2)},0`, `${0 + columnOffset},${h}`, `${w + columnOffset},${h}`],\n    //right: [`0,0`, `0,${h}`, `${w},${h / 2}`],\n    bottom: [`${0 + columnOffset},0`, `${w + columnOffset},0`, `${columnOffset + (w / 2)},${h}`],\n    //left: [`${w},0`, `${w},${h}`, `0,${h / 2}`],\n  }\n\n  return (\n    <polygon points={points[direction].join(' ')} fill={color} onMouseLeave={onMouseUp} onMouseDown={onMouseDown} onMouseUp={onMouseUp} className={className}/>\n  )\n}\n\nconst Circle = ({ cx = \"50\", cy = \"50\", r = \"40\", fill = \"white\" }) => {\n  return (\n    <circle cx={cx} cy={cy} r={r} stroke=\"black\" strokeWidth=\"3\" fill={fill} />\n  )\n}\n\nconst MinorChord = ({ scale = 100, rowIndex = 0, columnOffset = 0, chord = chords().Fsm, className=\"MinorChord\"}) => {\n  const w = scale * 2\n  const h = scale * 1.5\n  const io = rowIndex + scale + columnOffset\n\n  const [playing, setPlaying] = useState(false)\n  const play = () => {\n    if (!playing) {\n      console.log(\"play\")\n      let now = Tone.now()\n      setPlaying(true)\n      chord.notePitchOctave().forEach(element => {\n        synth.triggerAttack(element, now)\n      })\n    }\n  }\n\n  const release = () => {\n    if (playing) {\n      console.log(\"release\")\n      let now = Tone.now()\n      setPlaying(false)\n      chord.notePitchOctave().forEach(element => {\n        synth.triggerRelease(element, now)\n      })\n    }\n  }\n\n  return (\n    <Triangle w={w} h={h} columnOffset={io} direction='top' color='#606060' onMouseDown={play} onMouseUp={release} className={className} />\n\n  )\n}\nconst MajorChord = ({ scale = 100, rowIndex = 0, columnOffset = 0, chord = chords().Fsm, className=\"MajorChord\" }) => {\n  const w = scale * 2\n  const h = scale * 1.5\n  const io = rowIndex + columnOffset\n  const [playing, setPlaying] = useState(false)\n  const play = () => {\n    if (!playing) {\n      console.log(\"play\")\n      let now = Tone.now()\n      setPlaying(true)\n      chord.notePitchOctave().forEach(element => {\n        synth.triggerAttack(element, now)\n      })\n    }\n  }\n\n  const release = () => {\n    if (playing) {\n      console.log(\"release\")\n      let now = Tone.now()\n      setPlaying(false)\n      chord.notePitchOctave().forEach(element => {\n        synth.triggerRelease(element, now)\n      })\n    }\n  }\n\n  return (<Triangle w={w} h={h} columnOffset={io} direction='bottom' color='#c4c4c4' onMouseDown={play} onMouseUp={release} className={className} />\n  )\n}\n\nconst MinorChordCircles = ({ chord = chords().Fsm, scale = 100, rowIndex = 0, columnOffset = 0 }) => {\n\n  const w = scale * 2\n  const h = scale * 1.5\n  const notes = chord.noteNames()\n\n  const fill = note => note.slice(-1) === '#' ? \"black\" : \"white\"\n  return [\n    <Circle cx={w + rowIndex + scale + columnOffset} cy={h} fill={fill(notes[2])} />, //right\n    <Circle cx={w + rowIndex + columnOffset} cy={0} fill={fill(notes[1])} />, //top\n    <Circle cx={columnOffset + scale} cy={h} fill={fill(notes[0])} /> //left\n  ]\n}\n\nconst MajorChordCircles = ({ chord = chords().Fs, scale = 100, rowIndex = 0, columnOffset = 0 }) => {\n\n  const w = scale * 2\n  const h = scale * 1.5\n  const notes = chord.noteNames()\n\n  const fill = note => note.slice(-1) === '#' ? \"black\" : \"white\"\n  return [\n    <Circle cx={0 + rowIndex + columnOffset} cy={0} fill={fill(notes[0])} />,\n    <Circle cx={w + rowIndex + columnOffset} cy={0} />,\n    <Circle cx={columnOffset + scale} cy={h} />\n  ]\n\n}\n\nconst MinorChordText = ({ scale = 100, rowIndex = 0, columnOffset = 0, chord = chords().Fsm }) => {\n\n  const w = scale * 2\n  const h = scale * 1.5\n  const notes = chord.noteNames()\n  const fill = note => note.slice(-1) === '#' ? \"white\" : \"black\"\n  return [\n    <text x={w + rowIndex + columnOffset} y={0} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[1])}>{notes[1]}</text>,\n    <text x={columnOffset + scale + rowIndex} y={h} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[0])}>{notes[0]}</text>,\n    <text x={w + rowIndex + scale + columnOffset} y={h} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[2])}>{notes[2]}</text>,\n  ]\n}\n\nconst MajorChordText = ({ scale = 100, rowIndex = 0, columnOffset = 0, chord = chords().Fs }) => {\n\n  const w = scale * 2\n  const h = scale * 1.5\n  const notes = chord.noteNames()\n  const fill = note => note.slice(-1) === '#' ? \"white\" : \"black\"\n  return [\n    <text x={rowIndex + columnOffset} y={0} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[0])}>{notes[0]}</text>,\n    <text x={w + rowIndex + columnOffset} y={0} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[2])}>{notes[2]}</text>,\n    <text x={columnOffset + scale + rowIndex} y={h} textAnchor=\"middle\" className=\"noteText\" fill={fill(notes[1])}>{notes[1]}</text>\n  ]\n\n}\n\n\nconst TriangleRow = ({ scale = 100, columnOffset = 0, chord = chords().Fs }) => {\n  const majorParts = []\n  const minorParts = []\n\n\n  let rowIndex = 0\n\n  for (let j = 0; j < 8; j++) {\n    if (chord.isMinor()) {\n      minorParts.push({ chord: chord, rowIndex: rowIndex })\n      chord = chord.r()\n      rowIndex += scale * 2\n    } else if (chord.isMajor()) {\n      majorParts.push({ chord: chord, rowIndex: rowIndex })\n      chord = chord.l()\n    }\n  }\n\n\n  const w = scale * 2 * 10\n  const h = scale * 1.5\n  const viewBox = `0 0 ${w} ${h}`\n  return (\n    <div className=\"TriangleRow\">\n      <svg width={w} height={h} viewBox={viewBox} className=\"RowElems\">\n        {majorParts.map(x => <MajorChord chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n        {minorParts.map(x => <MinorChord chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n        {majorParts.map(x => <MajorChordCircles chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n        {minorParts.map(x => <MinorChordCircles chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n        {majorParts.map(x => <MajorChordText chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n        {minorParts.map(x => <MinorChordText chord={x.chord} rowIndex={x.rowIndex} columnOffset={columnOffset} />)}\n      </svg>\n    </div>\n  )\n}\n\nconst Tonnetz = () => {\n  const scale = 100\n  const rows = []\n  let chord = chords().Fs\n\n  for (let i = 0; i < 3; i++) {\n    rows.push({ chord: chord, columnOffset: scale * i })\n    chord = chord.l().p()\n  }\n  return (\n    <div>\n      {rows.map(x => <TriangleRow chord={x.chord} columnOffset={x.columnOffset} />)}\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div id=\"div1\">\n      <div id=\"div2\">\n        <Tonnetz />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}